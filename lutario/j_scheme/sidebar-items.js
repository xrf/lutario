initSidebarItems({"fn":[["calc_jjjj_naaaa",""],["check_eq_mop_j012",""],["check_eq_op_j100",""],["check_eq_op_j200",""],["check_eq_op_j211",""],["clone_mop_j012_from_tri_slice",""],["clone_mop_j012_to_tri_slice",""],["extent_mop_j012_as_tri",""],["foreach_jjjjk12_block",""],["foreach_jjjjk12_elem",""],["new_mop_j012",""],["op200_to_op211","Pandya transformation."],["op211_to_op200","Inverse Pandya transformation."],["rand_mop_j012",""],["read_mop_j012_txt","Read M-scheme matrix elements of a (0, 1, 2)-body operator from a text file, where states are encoded as orbital indices."],["set_zero_mop_j012",""]],"struct":[["BasisJ10",""],["BasisJ20",""],["BasisJ21",""],["BasisSchemeJ10",""],["BasisSchemeJ20",""],["BasisSchemeJ21",""],["CostatesJ10",""],["CostatesJ20",""],["CostatesJ21",""],["JAtlas",""],["JChan",""],["JPartedOrb",""],["JScheme",""],["JjjjBlockInfo",""],["PandyaScheme",""],["StateJ10",""],["StateJ20",""],["StateJ21",""],["StateMask10",""],["StateMask20",""],["StateMask21",""],["StatesJ10",""],["StatesJ20",""]],"type":[["DiagOpJ10","A diagonal standard-coupled one-body matrix"],["JOrbBasis",""],["MopJ012","A standard-coupled (0, 1, 2)-body matrix"],["OpBlockJ200","Block of a standard-coupled two-body matrix"],["OpJ100","A standard-coupled one-body matrix"],["OpJ200","A standard-coupled two-body matrix"],["OpJ211","A Pandya-coupled two-body matrix"]]});
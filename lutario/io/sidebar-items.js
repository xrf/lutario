initSidebarItems({"enum":[["Compression","Supported compression formats for input files"]],"fn":[["copy_while","Copy data from a source to a sink while the predicate remains true."],["decode_compressed","Open a compressed file and decode based on the file extension. If the extension does not end in \"z\", the file is read as-is."],["fill_buf_with_retry",""],["guess_compression","Guess the compression based on the file extension. If the extension does not end in \"z\", then no compression is assumed."],["invalid_data","Helper function for creating `io::Error` with `io::ErrorKind::InvalidData`."],["split_extension","Works just like Python's `os.path.splitext`.  Note that the returned extension includes the dot.  If there is no extension, returns an empty string as the extension.  Only works on UTF-8 strings due to limitations of the `std::path::Path` API."]],"mod":[["parser","Utility for parsing byte strings."]],"struct":[["BinArrayParser",""],["MapleTableParser","Parse numbers from a white-space separated text file. Comments delimited by `(* â€¦ *)` are ignored."]],"trait":[["ReadBinFrom",""]]});